@model IEnumerable<InvoiceSystem.Core.Models.Invoice>

@{
    ViewBag.Title = "Invoice Dashboard";
}

<style>
    /* Basic styling for separation and clarity */
    .dashboard-header-section {
        margin-bottom: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .table th, .table td {
        vertical-align: middle; /* Center content vertically in table cells */
    }

    .table-actions {
        white-space: nowrap; /* Prevent action links/buttons from wrapping */
        text-align: center; /* Center actions in their column */
    }

    /* Style for icon buttons */
    .btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: .25rem .5rem; /* Adjust padding for smaller buttons */
        font-size: .875rem; /* Smaller font size for sm buttons */
        line-height: 1.5;
        border-radius: .2rem;
        margin-right: 5px; /* Spacing between buttons */
    }

        .btn-icon .icon {
            margin-right: .25rem; /* Space between icon and text if any */
        }
</style>

<div class="dashboard-header-section">
    <h2>@ViewBag.Title</h2>
    <p>
        @Html.ActionLink("Create New Invoice", "Upsert", "Invoice", null, new { @class = "btn btn-primary" })
        @* Added Logout Button *@
        @Html.ActionLink("Logout", "Logout", "Account", null, new { @class = "btn btn-danger ml-2" })
    </p>
</div>

@if (Model != null && Model.Any())
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.InvoiceNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SupplierName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InvoiceTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th class="table-actions">Actions</th> @* Added class for styling *@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="invoiceRow_@item.InvoiceId">
                    @* Added ID for easy removal with JS *@
                    <td>
                        @* Display Invoice Number directly, allow clicking to edit *@
                        @Html.ActionLink(item.InvoiceNumber, "Upsert", "Invoice", new { id = item.InvoiceId }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SupplierName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InvoiceTotal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td class="table-actions">
                        @* Edit Action Link with simple text icon *@
                        @Html.ActionLink("✏️ Edit", "Upsert", "Invoice", new { id = item.InvoiceId }, new { @class = "btn btn-sm btn-info btn-icon" })
                        @* Delete Button with simple text icon and JavaScript confirmation *@
                        <button type="button" class="btn btn-sm btn-danger btn-icon deleteInvoiceBtn" data-invoice-id="@item.InvoiceId" title="Delete Invoice">
                            ❌ Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info" role="alert">
        No invoices found. Click "Create New Invoice" to add one.
    </div>
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Client-side confirmation and AJAX deletion for invoices
            $(document).on('click', '.deleteInvoiceBtn', function () {
                var invoiceId = $(this).data('invoice-id'); // Get the invoice ID from data attribute
                if (confirm("Are you sure you want to delete Invoice " + invoiceId + " and all its line items? This action cannot be undone.")) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Invoice")', // Point to the new Delete action
                        type: 'POST',
                        data: { id: invoiceId },
                        success: function (response) {
                            if (response.success) {
                                $('#invoiceRow_' + invoiceId).remove(); // Remove the row from the table
                                alert(response.message); // Show success message
                                // Check if no more invoices, then show the "No invoices found" message
                                if ($('#lineItemsTable tbody tr').length === 0) {
                                    // You might need to add a div to show this message dynamically
                                    // For now, a simple reload or adding a div will work.
                                    // A more robust solution would be to hide the table and show the info div.
                                    location.reload(); // Simple reload for demonstration
                                }
                            } else {
                                alert("Error deleting invoice: " + response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error:", status, error, xhr.responseText);
                            alert("An error occurred during deletion. Please try again.");
                        }
                    });
                }
            });
        });
    </script>
}
